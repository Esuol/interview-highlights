{"remainingRequest":"/Users/berlin/www/personal/github/interview-highlignts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/berlin/www/personal/github/interview-highlignts/node_modules/vuepress/lib/default-theme/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/berlin/www/personal/github/interview-highlignts/node_modules/vuepress/lib/default-theme/Layout.vue","mtime":1528302371000},{"path":"/Users/berlin/www/personal/github/interview-highlignts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/interview-highlignts/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/berlin/www/personal/github/interview-highlignts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berlin/www/personal/github/interview-highlignts/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport nprogress from 'nprogress'\nimport Home from './Home.vue'\nimport Navbar from './Navbar.vue'\nimport Page from './Page.vue'\nimport Sidebar from './Sidebar.vue'\nimport { resolveSidebarItems } from './util'\n\nexport default {\n  components: { Home, Page, Sidebar, Navbar },\n  data () {\n    return {\n      isSidebarOpen: false\n    }\n  },\n\n  computed: {\n    shouldShowNavbar () {\n      const { themeConfig } = this.$site\n      const { frontmatter } = this.$page\n      if (\n        frontmatter.navbar === false ||\n        themeConfig.navbar === false) {\n        return false\n      }\n      return (\n        this.$title ||\n        themeConfig.logo ||\n        themeConfig.repo ||\n        themeConfig.nav ||\n        this.$themeLocaleConfig.nav\n      )\n    },\n    shouldShowSidebar () {\n      const { frontmatter } = this.$page\n      return (\n        !frontmatter.layout &&\n        !frontmatter.home &&\n        frontmatter.sidebar !== false &&\n        this.sidebarItems.length\n      )\n    },\n    sidebarItems () {\n      return resolveSidebarItems(\n        this.$page,\n        this.$route,\n        this.$site,\n        this.$localePath\n      )\n    },\n    pageClasses () {\n      const userPageClass = this.$page.frontmatter.pageClass\n      return [\n        {\n          'no-navbar': !this.shouldShowNavbar,\n          'sidebar-open': this.isSidebarOpen,\n          'no-sidebar': !this.shouldShowSidebar\n        },\n        userPageClass\n      ]\n    }\n  },\n\n  mounted () {\n    window.addEventListener('scroll', this.onScroll)\n\n    // configure progress bar\n    nprogress.configure({ showSpinner: false })\n\n    this.$router.beforeEach((to, from, next) => {\n      if (to.path !== from.path && !Vue.component(to.name)) {\n        nprogress.start()\n      }\n      next()\n    })\n\n    this.$router.afterEach(() => {\n      nprogress.done()\n      this.isSidebarOpen = false\n    })\n  },\n\n  methods: {\n    toggleSidebar (to) {\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen\n    },\n    // side swipe\n    onTouchStart (e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      }\n    },\n    onTouchEnd (e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x\n      const dy = e.changedTouches[0].clientY - this.touchStart.y\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true)\n        } else {\n          this.toggleSidebar(false)\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"Layout.vue","sourceRoot":"node_modules/vuepress/lib/default-theme","sourcesContent":["<template>\n  <div class=\"theme-container\"\n    :class=\"pageClasses\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\">\n    <Navbar v-if=\"shouldShowNavbar\" @toggle-sidebar=\"toggleSidebar\"/>\n    <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\"></div>\n    <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n      <slot name=\"sidebar-top\" slot=\"top\"/>\n      <slot name=\"sidebar-bottom\" slot=\"bottom\"/>\n    </Sidebar>\n    <div class=\"custom-layout\" v-if=\"$page.frontmatter.layout\">\n      <component :is=\"$page.frontmatter.layout\"/>\n    </div>\n    <Home v-else-if=\"$page.frontmatter.home\"/>\n    <Page v-else :sidebar-items=\"sidebarItems\">\n      <slot name=\"page-top\" slot=\"top\"/>\n      <slot name=\"page-bottom\" slot=\"bottom\"/>\n    </Page>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport nprogress from 'nprogress'\nimport Home from './Home.vue'\nimport Navbar from './Navbar.vue'\nimport Page from './Page.vue'\nimport Sidebar from './Sidebar.vue'\nimport { resolveSidebarItems } from './util'\n\nexport default {\n  components: { Home, Page, Sidebar, Navbar },\n  data () {\n    return {\n      isSidebarOpen: false\n    }\n  },\n\n  computed: {\n    shouldShowNavbar () {\n      const { themeConfig } = this.$site\n      const { frontmatter } = this.$page\n      if (\n        frontmatter.navbar === false ||\n        themeConfig.navbar === false) {\n        return false\n      }\n      return (\n        this.$title ||\n        themeConfig.logo ||\n        themeConfig.repo ||\n        themeConfig.nav ||\n        this.$themeLocaleConfig.nav\n      )\n    },\n    shouldShowSidebar () {\n      const { frontmatter } = this.$page\n      return (\n        !frontmatter.layout &&\n        !frontmatter.home &&\n        frontmatter.sidebar !== false &&\n        this.sidebarItems.length\n      )\n    },\n    sidebarItems () {\n      return resolveSidebarItems(\n        this.$page,\n        this.$route,\n        this.$site,\n        this.$localePath\n      )\n    },\n    pageClasses () {\n      const userPageClass = this.$page.frontmatter.pageClass\n      return [\n        {\n          'no-navbar': !this.shouldShowNavbar,\n          'sidebar-open': this.isSidebarOpen,\n          'no-sidebar': !this.shouldShowSidebar\n        },\n        userPageClass\n      ]\n    }\n  },\n\n  mounted () {\n    window.addEventListener('scroll', this.onScroll)\n\n    // configure progress bar\n    nprogress.configure({ showSpinner: false })\n\n    this.$router.beforeEach((to, from, next) => {\n      if (to.path !== from.path && !Vue.component(to.name)) {\n        nprogress.start()\n      }\n      next()\n    })\n\n    this.$router.afterEach(() => {\n      nprogress.done()\n      this.isSidebarOpen = false\n    })\n  },\n\n  methods: {\n    toggleSidebar (to) {\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen\n    },\n    // side swipe\n    onTouchStart (e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      }\n    },\n    onTouchEnd (e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x\n      const dy = e.changedTouches[0].clientY - this.touchStart.y\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true)\n        } else {\n          this.toggleSidebar(false)\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style src=\"prismjs/themes/prism-tomorrow.css\"></style>\n<style src=\"./styles/theme.styl\" lang=\"stylus\"></style>\n"]}]}